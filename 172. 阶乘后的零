给定一个整数 n，返回 n! 结果尾数中零的数量。

示例 1:

输入: 3
输出: 0
解释: 3! = 6, 尾数中没有零。
示例 2:

输入: 5
输出: 1
解释: 5! = 120, 尾数中有 1 个零.

-------------------------------Code------------------------------------
class Solution {
    public int trailingZeroes(int n) {
        // 分析：结尾0的数量，意味着n可以分解为多个10相乘，10可以分解为2*5
        // 所以只需要找出乘法有多少个2*5的因子，5是每隔5才出现一次，2是每隔2出现一次，所以找出5出现的次数即可
        // n! = 1*2*3*4*(1*5)*......*(2*5)*.....*(5*5)......*(5*5*5).....*n
        // 5出现的次数为n / 5 + n / 25 + n / 125 +.......
        int count = 0;
        while (n > 0) {
            count += n / 5;
            n /= 5;
        }
        return count;
    }
}
