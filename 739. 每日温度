根据每日 气温 列表，请重新生成一个列表，对应位置的输入是你需要再等待多久温度才会升高超过该日的天数。如果之后都不会升高，请在该位置用 0 来代替。

例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，你的输出应该是 [1, 1, 4, 2, 1, 1, 0, 0]。

提示：气温 列表长度的范围是 [1, 30000]。每个气温的值的均为华氏度，都是在 [30, 100] 范围内的整数。

---------------------------------Code----------------------------------------
class Solution {
    public int[] dailyTemperatures(int[] T) {
        // 这种做法貌似时间复杂度较高，效率低
        // int[] res = new int[T.length];
        // int index = 0;
        // while (index < res.length) {
        //     for (int i = index; i < T.length; i++) {
        //         if (T[i] > T[index]) {
        //             res[index] = i - index;
        //             break;
        //         }
        //     }
        //     index++;
        // }
        // return res;

        // 利用单调栈，逆序遍历，栈顶为最小元素
        int[] res = new int[T.length];
        Stack<Integer> stack = new Stack<>();
        for (int i = T.length - 1; i >= 0; i--) {
            // Stack始终是以第i+1个元素为栈顶且从栈顶到栈底递增
            // 找到栈里面第一个比T[i]大的元素
            while (!stack.isEmpty() && T[i] >= T[stack.peek()]) stack.pop();
            res[i] = stack.isEmpty() ? 0 : (stack.peek() - i);
            stack.push(i);
        }
        return res;
    }
}
