老师想给孩子们分发糖果，有 N 个孩子站成了一条直线，老师会根据每个孩子的表现，预先给他们评分。

你需要按照以下要求，帮助老师给这些孩子分发糖果：

每个孩子至少分配到 1 个糖果。
相邻的孩子中，评分高的孩子必须获得更多的糖果。
那么这样下来，老师至少需要准备多少颗糖果呢？

示例 1:

输入: [1,0,2]
输出: 5
解释: 你可以分别给这三个孩子分发 2、1、2 颗糖果。
示例 2:

输入: [1,2,2]
输出: 4
解释: 你可以分别给这三个孩子分发 1、2、1 颗糖果。
     第三个孩子只得到 1 颗糖果，这已满足上述两个条件。

-------------------------------------------Code------------------------------------------------
class Solution {
    public int candy(int[] ratings) {
        int[] left = new int[ratings.length];
        int[] right = new int[ratings.length];
        Arrays.fill(left, 1); // left和right数组全部赋值为1
        Arrays.fill(right, 1);
        for (int i = 1; i < left.length; i++) { // 从左向右遍历，找出递增使得评分高的获取更多糖果
            if (ratings[i] > ratings[i - 1]) left[i] = left[i - 1] + 1;
        }
        int ans = left[left.length - 1];
        for (int i = right.length - 2; i >= 0; i--) { // 从右向左遍历，找出递增使得评分高的获取更多糖果
            if (ratings[i] > ratings[i + 1]) right[i] = right[i + 1] + 1;
            ans += Math.max(left[i], right[i]); // 选取left和right数组中更大的值
        }
        return ans;
    }
}
