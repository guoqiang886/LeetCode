给定一个二叉搜索树（Binary Search Tree），把它转换成为累加树（Greater Tree)，使得每个节点的值是原来的节点值加上所有大于它的节点值之和。

例如：

输入: 二叉搜索树:
              5
            /   \
           2     13

输出: 转换为累加树:
             18
            /   \
          20     13

------------------------------------------------Code-----------------------------------------------

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {

    // 全局变量，遍历到每一个节点都需要对sum修改一次
    private int sum = 0;

    public TreeNode convertBST(TreeNode root) {
        // 按照right -> root -> left的中序遍历方式得出累加树
        help(root);
        return root;
    }

    public void help(TreeNode root) {
        // 中序遍历
        if (null == root) return;
        help(root.right);
        root.val += sum;
        sum = root.val;
        help(root.left);
    }
}
