给定一棵二叉树，你需要计算它的直径长度。一棵二叉树的直径长度是任意两个结点路径长度中的最大值。这条路径可能穿过根结点。

示例 :
给定二叉树

          1
         / \
        2   3
       / \     
      4   5    
返回 3, 它的长度是路径 [4,2,1,3] 或者 [5,2,1,3]。

注意：两结点之间的路径长度是以它们之间边的数目表示。

--------------------------------------------Code--------------------------------------------------
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {

    private int res = 0;

    public int diameterOfBinaryTree(TreeNode root) {
        // 错误解法：直径长度就是左子树的高度加上右子树的高度
        // 因为存在直径不经过根节点的情况
        // 所以需要记录每个节点的直径，找出每所有节点中最大的直径
        depth(root);
        return res;    
    }

    public int depth(TreeNode root) {
        // 求二叉树的高度,同时在递归时记录每个节点的直径
        if (null == root) return 0;
        int l = depth(root.left);
        int r = depth(root.right);
        res = Math.max(res, l + r);
        return Math.max(l, r) + 1;
    }
}
