一个长度为n-1的递增排序数组中的所有数字都是唯一的，并且每个数字都在范围0～n-1之内。在范围0～n-1内的n个数字中有且只有一个数字不在该数组中，请找出这个数字。

 

示例 1:

输入: [0,1,3]
输出: 2
示例 2:

输入: [0,1,2,3,4,5,6,7,9]
输出: 8
 

限制：

1 <= 数组长度 <= 10000

-----------------------------------------Code-------------------------------------------
class Solution {
    public int missingNumber(int[] nums) {
        // 二分查找
        int low = 0, high = nums.length - 1;
        while (low < high) {
            int mid = low + ((high - low) >> 1);
            if (nums[mid] == mid) low = mid + 1; // 相等则在右边查找
            else high = mid; // 否则左边查找
        }
        // 注意这里需要判断是否索引和nums[索引]相等，如果相等，说明缺失值是n
        return nums[low] != low ? low : nums.length;
    }
}
