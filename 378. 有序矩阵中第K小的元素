378. 有序矩阵中第K小的元素
给定一个 n x n 矩阵，其中每行和每列元素均按升序排序，找到矩阵中第 k 小的元素。
请注意，它是排序后的第 k 小元素，而不是第 k 个不同的元素。

 

示例：

matrix = [
   [ 1,  5,  9],
   [10, 11, 13],
   [12, 13, 15]
],
k = 8,

返回 13。
 

提示：
你可以假设 k 的值永远是有效的，1 ≤ k ≤ n2 。

------------------------------------------Code------------------------------------------------
class Solution {
    public int kthSmallest(int[][] matrix, int k) {
        // 思路类似于合并k个排序链表，这里相当于用一个数组表示链表的节点
        // 另外一种二分法的方法没有特别懂...
        PriorityQueue<int[]> pq = new PriorityQueue<>(new Comparator<int[]>() {
            @Override
            public int compare(int[] o1, int[] o2) {
                return o1[0] - o2[0];
            }
        });
        for (int i = 0; i < matrix.length; i++) {
            pq.offer(new int[] {matrix[i][0], i, 0});
        }
        int[] ans = null;
        for (int i = 0; i < k; i++) {
            ans = pq.poll();
            if (ans[2] < matrix.length - 1) {
                pq.offer(new int[] {matrix[ans[1]][ans[2] + 1], ans[1], ans[2] + 1});
            }
        }
        return ans[0];
    }
}
