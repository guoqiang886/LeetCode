给定一个没有重复数字的序列，返回其所有可能的全排列。

示例:

输入: [1,2,3]
输出:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]

---------------------------------------Code----------------------------------------
class Solution {

    private List<List<Integer>> res = new ArrayList<>();

    public List<List<Integer>> permute(int[] nums) {
        /*
         * 回溯法寻找所有可能的解
         */
        help(nums, new ArrayList<>());
        return res;
    }

    public void help(int[] nums, List<Integer> list) {
        // 递归出口，这里可以省略return
        if (list.size() == nums.length) res.add(list);

        for (int i = list.size(); i < nums.length; i++) {
            List<Integer> newList = new ArrayList<>(list);
            newList.add(nums[i]);
            swap(nums, list.size(), i);
            help(nums, newList);
            // 注意这里必须要交换回来
            swap(nums, list.size(), i);
        }
    }

    public void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
