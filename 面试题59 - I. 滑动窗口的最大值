给定一个数组 nums 和滑动窗口的大小 k，请找出所有滑动窗口里的最大值。

示例:

输入: nums = [1,3,-1,-3,5,3,6,7], 和 k = 3
输出: [3,3,5,5,6,7] 
解释: 

  滑动窗口的位置                最大值
---------------               -----
[1  3  -1] -3  5  3  6  7       3
 1 [3  -1  -3] 5  3  6  7       3
 1  3 [-1  -3  5] 3  6  7       5
 1  3  -1 [-3  5  3] 6  7       5
 1  3  -1  -3 [5  3  6] 7       6
 1  3  -1  -3  5 [3  6  7]      7

------------------------------------------Code-----------------------------------------------
class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        if (nums == null || nums.length == 0) return new int[0];
        int[] ans = new int[nums.length - k + 1];
        Deque<Integer> deque = new LinkedList<>();  // 双向队列
        for (int i = 0; i < nums.length; i++) {
            // 往双向队列的队尾添加元素，并且保证双向队列从头到尾递减，且队尾元素就是nums[i]
            while (!deque.isEmpty() && deque.getLast() < nums[i]) {
                deque.removeLast();
            }
            deque.addLast(nums[i]);
            // 大于k - 1时，则结果就是队头元素
            if (i >= k - 1) {
                ans[i - k + 1] = deque.getFirst();
                if (nums[i - k + 1] == deque.getFirst()) {
                    deque.removeFirst();
                }
            }
        }
        return ans;
    }
}
