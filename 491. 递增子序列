给定一个整型数组, 你的任务是找到所有该数组的递增子序列，递增子序列的长度至少是2。

示例:

输入: [4, 6, 7, 7]
输出: [[4, 6], [4, 7], [4, 6, 7], [4, 6, 7, 7], [6, 7], [6, 7, 7], [7,7], [4,7,7]]
说明:

给定数组的长度不会超过15。
数组中的整数范围是 [-100,100]。
给定数组中可能包含重复数字，相等的数字应该被视为递增的一种情况。

-------------------------------------Code-------------------------------------------
class Solution {
    private Set<List<Integer>> res = new HashSet<>();
    public List<List<Integer>> findSubsequences(int[] nums) {
        help(nums, 0, new ArrayList<>());
        return new ArrayList<>(res);
    }

    public void help(int[] nums, int index, List<Integer> list) {
        if (index == nums.length) {
            if (list.size() >= 2) {
                res.add(new ArrayList<>(list));
            }
            return;
        }
        help(nums, index + 1, list);
        if (list.size() == 0 || nums[index] >= list.get(list.size() - 1)) {
            list.add(nums[index]);
            help(nums, index + 1, list);
            list.remove(list.size() - 1);
        }
    }
}
