给定一个包含红色、白色和蓝色，一共 n 个元素的数组，原地对它们进行排序，使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。

此题中，我们使用整数 0、 1 和 2 分别表示红色、白色和蓝色。

注意:
不能使用代码库中的排序函数来解决这道题。

示例:

输入: [2,0,2,1,1,0]
输出: [0,0,1,1,2,2]

--------------------------------------Code-------------------------------------
class Solution {
    public void sortColors(int[] nums) {
        /*
         * 解法一：迭代计算0,1,2元素的个数，然后迭代重写当前数组
         * 解法二：如下，只需一次迭代，遇到0则交换到前面，遇到2则交换到后面
         */
        int zeroIdx = 0;
        int twoIdx = nums.length - 1;
        int temp;
        for (int i = 0; i < nums.length; i++) {
            if (0 == nums[i]) {
                temp = nums[i];
                nums[i] = nums[zeroIdx];
                nums[zeroIdx] = temp;
                zeroIdx++;
            } else if (2 == nums[i] && i <= twoIdx) {
                temp = nums[i];
                nums[i] = nums[twoIdx];
                nums[twoIdx] = temp;
                i--;
                twoIdx--;
            }
        }
    }
}
