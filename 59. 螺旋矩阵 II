给定一个正整数 n，生成一个包含 1 到 n2 所有元素，且元素按顺时针顺序螺旋排列的正方形矩阵。

示例:

输入: 3
输出:
[
 [ 1, 2, 3 ],
 [ 8, 9, 4 ],
 [ 7, 6, 5 ]
]

----------------------------------------Code---------------------------------------------
class Solution {
    public int[][] generateMatrix(int n) {
        // 按照顺时针旋转遍历，主要是边界问题
        int[][] result = new int[n][n];
        // j表示第几圈
        int count = 1, j = 0;
        while (count <= n * n) {
            // 从左到右
            for (int i = j; i < n - j; i++) {
                result[j][i] = count++;
            }
            // 从上到下
            for (int i = j + 1; i < n - j; i++) {
                result[i][n - j - 1] = count++;
            }
            // 从右到左
            for (int i = n - j - 2; i >= j; i--) {
                result[n - j - 1][i] = count++;
            }
            // 从左到上
            for (int i = n - j - 2; i > j; i--) {
                result[i][j] = count++;
            }
            j++;
        }
        return result;
    }
}
