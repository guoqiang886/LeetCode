给定一个二叉树和一个目标和，判断该树中是否存在根节点到叶子节点的路径，这条路径上所有节点值相加等于目标和。

说明: 叶子节点是指没有子节点的节点。

示例: 
给定如下二叉树，以及目标和 sum = 22，

              5
             / \
            4   8
           /   / \
          11  13  4
         /  \      \
        7    2      1
返回 true, 因为存在目标和为 22 的根节点到叶子节点的路径 5->4->11->2。

---------------------------------------------Code-------------------------------------------------
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean ans = false;
    public boolean hasPathSum(TreeNode root, int sum) {
        if (root == null) return false;
        help(root, sum);
        return ans;
    }
    
    public void help(TreeNode root, int sum) {
        if (root == null) {
            return;
        }
        sum -= root.val;
        // 注意叶子节点是左右子树都为空的节点
        if (root.left == null && root.right == null && sum == 0) ans = true;
        help(root.left, sum);
        help(root.right, sum);
    }
}
