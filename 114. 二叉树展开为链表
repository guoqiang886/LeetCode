给定一个二叉树，原地将它展开为链表。

例如，给定二叉树

    1
   / \
  2   5
 / \   \
3   4   6
将其展开为：

1
 \
  2
   \
    3
     \
      4
       \
        5
         \
          6

---------------------------------------Code----------------------------------------------
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    TreeNode pre;
    public void flatten(TreeNode root) {
        /*
         * 思路一：
         * 先序遍历得到每一个节点
         * 然后将根据先序遍历的结果重新构造为链表结构,空间复杂度较高
         */
        // if (root == null) return;

        // List<TreeNode> nodeList = new ArrayList<>();
        // dlr(root, nodeList);
        // for (int i = 0; i < nodeList.size() - 1; i++) {
        //     nodeList.get(i).left = null;
        //     nodeList.get(i).right = nodeList.get(i+1);
        // }

        // 思路二：后序遍历+全局变量的方式
        if (root == null) return;
        flatten(root.right);
        flatten(root.left);
        root.left = null;
        root.right = pre;
        pre = root;
    }

    // public void dlr(TreeNode root, List<TreeNode> nodeList) {
    //     if (root == null) return;
    //     nodeList.add(root);
    //     dlr(root.left, nodeList);
    //     dlr(root.right, nodeList);
    // }
}
