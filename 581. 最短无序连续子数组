给定一个整数数组，你需要寻找一个连续的子数组，如果对这个子数组进行升序排序，那么整个数组都会变为升序排序。

你找到的子数组应是最短的，请输出它的长度。

示例 1:

输入: [2, 6, 4, 8, 10, 9, 15]
输出: 5
解释: 你只需要对 [6, 4, 8, 10, 9] 进行升序排序，那么整个表都会变为升序排序。
说明 :

输入的数组长度范围在 [1, 10,000]。
输入的数组可能包含重复元素 ，所以升序的意思是<=。

-------------------------------------------Code-------------------------------------------
class Solution {
    public int findUnsortedSubarray(int[] nums) {
        /*
         * 正向遍历找到开始降序以后的最小值min，逆向遍历找到开始升序后的最大值
         * 根据min和max值找到对应的left位置和right位置，得到最小区间
         */
        int min = Integer.MAX_VALUE;
        int max = Integer.MIN_VALUE;
        boolean flag = false;
        for (int i = 0; i < nums.length - 1; i++) {
            if (nums[i] > nums[i+1]) flag = true;
            if (flag) min = Math.min(min, nums[i+1]);
        }
        
        flag = false;
        for (int i = nums.length - 1; i > 0; i--) {
            if (nums[i] < nums[i-1]) flag = true;
            if (flag) max = Math.max(max, nums[i-1]);
        }

        int left = 0;
        int right = nums.length - 1;
        for (; left < nums.length; left++) {
            if (nums[left] > min) break;
        }

        for (; right >= 0; right--) {
            if (nums[right] < max) break;
        }
        return right > left ? right - left + 1 : 0;
    }
}
